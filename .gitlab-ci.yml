variables:
  DOCKER_DRIVER: overlay2

#before_script:
#  - apt-get update --yes
#  - apt clean all
#  - apt-get install -y python3-pip
#  - pip install cmake --upgrade
#  - apt-get install --yes ninja-build
#  - apt-get install --yes build-essential libgl1-mesa-dev
#  - apt-get install doxygen --assume-yes
  #- apt-get update -yq && apt-get install -y qt5-qmake qttools5-dev qtchooser g++ qtdeclarative5-dev qtquickcontrols2-5-dev # possibly not needed anymore
#  - apt-get install g++
#  - wget https://download.qt.io/official_releases/qt/6.2/6.2.0/single/qt-everywhere-src-6.2.0.tar.xz
#  - tar xf qt-everywhere-src-6.2.0.tar.xz
#  - cd qt-everywhere-src-6.2.0
#  - ./configure -prefix /usr/local/Qt6 # Put the wanted features here, might speed the whole process up
#  - cmake --build .
#  - cmake --install .
#  - cd ..
#  - PATH=/usr/local/Qt6/bin:$PATH
#  - export PATH

#image: gcc

stages:          # List of stages for jobs, and their order of execution
  - build

build-job:       # This job runs in the build stage, which runs first.
  image:
    name: gitlab-etu.ing.he-arc.ch:5050/timothy.peck/docker-image-p2:latest
    entrypoint:
      ["/bin/bash", "-c", "ln -snf /bin/bash /bin/sh && /bin/bash -c $0"]
  stage: build
  tags:
    - alpine-docker
  artifacts:
    paths:
      - ./NoDrama/Documentation
    expire_in: 1 week
  script:
    - mkdir BUILD
    - cd BUILD
    - cmake -G "Ninja" ../NoDrama -D CMAKE_PREFIX_PATH="/usr/local/Qt6/lib/cmake/Qt6/"
    - ninja
    - cmake --build . --target BuildDoc